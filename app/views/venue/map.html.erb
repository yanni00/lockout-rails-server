<div id="centerScreen">
  <h1>Find Venues near me</h1>
</div>

<style>
  #map {
    height: 60vh;
    width: auto;
    margin-bottom: 6vh;
  }

  html, body {
    height: 100vh;
    margin: 0;
    margin: 0 0 20px;
  }
</style>

<div onmouseup="getVenues()">
  <div id="centerScreen">
    <div class="slidecontainer">
      <input type="range" min="100" max="5000" value="500" class="slider" id="myRange">
      <p>Find Venues Within <span id="demo"></span>0m</p>
    </div>
  </div>
</div>

<div id="venueMapBounds">
  <div id="map"></div>
</div>


<script>
    var slider = document.getElementById("myRange");
    var output = document.getElementById("demo");
    output.innerHTML = slider.value;

    slider.oninput = function() {
      output.innerHTML = this.value;
      console.log(output.innerHTML);
  }

    console.log('I AM RUNNING FROM MAP ERB');
    let venues = [];
    let userLat = 0;
    let userLon = 0;


  function getVenues() {
    navigator.geolocation.getCurrentPosition(function (position) {
      console.log(position.coords.latitude)
      console.log(position.coords.longitude)
      userLat = position.coords.latitude;
      userLon = position.coords.longitude;
      radius = (output.innerHTML * 0.01);



      fetch(`/venue/near_me?lat=${userLat}&lon=${userLon}&radius=${radius}`)
      .then( res => res.json() )
      .then( data => {
        console.log('response', data);

        venues = data;

        initMap();

      },
      function (error) {
        console.log("The Locator was denied. :(");
      })
    })
  };


  function initMap() {
    var bounds = new google.maps.LatLngBounds();
    var map = new google.maps.Map(document.getElementById('map'));
    var myLatLng = {lat: userLat, lng: userLon};

    var userMarker = new google.maps.Marker({
      position: myLatLng,
      map: map,
      title: 'You Are Here!'
    });

    for (let i = 0; i < venues.length; i++) {
      const venueFind = venues[i];

      const marker = new google.maps.Marker({
        position: {lat: venueFind.latitude, lng: venueFind.longitude},
        map: map,
        title: venueFind.title + ', ' + venueFind.address + ', ' + venueFind.longitude + ', ' + venueFind.latitude
      });

      const infoWindow = new google.maps.InfoWindow({
        content: venueFind.title+ ', ' +venueFind.address+','+venueFind.visited
      });

      marker.addListener('click', () => {
        infoWindow.open(map, marker);
      });
      bounds.extend(marker.position);
      bounds.extend(userMarker.position);
    }
    map.fitBounds(bounds);
  } // End of initMap()



// refreshMap();
</script>


<script
  src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBzyr7eFoXaYNJdUvzpTml3TfpgNlMxKVQ&callback=getVenues" async defer>
</script>
